{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","count","addOne","setState","currentState","add100","greatIncrease","increase","setZero","this","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0NASaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,GAFX,EAKEC,OAAS,WACP,EAAKC,UAAS,SAACC,GAAD,MAAmB,CAC/BH,MAAOG,EAAaH,MAAQ,OAPlC,EAWEI,OAAS,WACP,EAAKF,UAAS,SAACC,GAAD,MAAmB,CAC/BH,MAAOG,EAAaH,MAAQ,SAblC,EAiBEK,cAAgB,WACd,EAAKH,UAAS,SAACC,GAAD,MAAmB,CAC/BH,MAAOG,EAAaH,MAAQ,SAnBlC,EAuBEM,SAAW,WACT,EAAKL,SAED,EAAKF,MAAMC,MAAQ,IAAM,GAC3B,EAAKI,UA3BX,EA+BEG,QAAU,WACR,EAAKL,UAAS,SAACC,GAAD,MAAmB,CAC/BH,MAAOG,EAAaH,MAAQG,EAAaH,MAAQ,OAjCvD,4CAqCE,WACE,IAAQA,EAAUQ,KAAKT,MAAfC,MAER,OACE,sBAAKS,UAAU,MAAf,UACa,IAAVT,GACC,qBAAKS,UAAU,SAAf,SACE,mBAAGA,UAAU,QAAb,2CAGHT,EAAQ,GACP,qBAAKS,UAAU,UAEfT,GAAS,GAAKA,EAAQ,KACtB,qBAAKS,UAAU,UAEfT,GAAS,KAAOA,EAAQ,KACxB,qBAAKS,UAAU,YAEfT,GAAS,KAAOA,EAAQ,KACxB,qBAAKS,UAAU,YAEfT,GAAS,KAAOA,EAAQ,KACxB,qBAAKS,UAAU,YAEhBT,GAAS,KACR,qBAAKS,UAAU,aAGjB,wBAAQC,KAAK,SAASD,UAAU,eAAeE,QAASH,KAAKP,OAA7D,yCAIA,wBAAQS,KAAK,SAASD,UAAU,eAAeE,QAASH,KAAKJ,OAA7D,0DAIA,wBAAQM,KAAK,SAASD,UAAU,gBAAgBE,QAASH,KAAKF,SAA9D,qEAIA,wBAAQI,KAAK,SAASD,UAAU,aAAaE,QAASH,KAAKD,QAA3D,6CAIA,wBAAQG,KAAK,SAASC,QAASH,KAAKH,cAApC,4CAIA,qBAAII,UAAU,aAAd,UACE,sDADF,iBAEaT,aAxFrB,GAAyBY,IAAMC,WCN/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.69c286f5.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/semi */\n/* eslint-disable max-len */\nimport React from 'react';\nimport './App.scss';\n\ntype State = {\n  count: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState((currentState) => ({\n      count: currentState.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState((currentState) => ({\n      count: currentState.count + 100,\n    }));\n  };\n\n  greatIncrease = () => {\n    this.setState((currentState) => ({\n      count: currentState.count + 1000,\n    }));\n  };\n\n  increase = () => {\n    this.addOne();\n\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n  };\n\n  setZero = () => {\n    this.setState((currentState) => ({\n      count: currentState.count - currentState.count - 1,\n    }));\n  };\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <div className=\"App\">\n        {count === 0 && (\n          <div className=\"cat_hr\">\n            <p className=\"title\">What is your talants, dude?</p>\n          </div>\n        )}\n        {count < 0 && (\n          <div className=\"cash0\" />\n        )}\n        {(count >= 1 && count < 100) && (\n          <div className=\"cash1\" />\n        )}\n        {(count >= 100 && count < 105) && (\n          <div className=\"cash100\" />\n        )}\n        {(count >= 105 && count < 500) && (\n          <div className=\"cash300\" />\n        )}\n        {(count >= 500 && count < 999) && (\n          <div className=\"cash500\" />\n        )}\n        {count >= 999 && (\n          <div className=\"cash1000\" />\n        )}\n\n        <button type=\"button\" className=\"App__add-one\" onClick={this.addOne}>\n          I know how to make websites\n        </button>\n\n        <button type=\"button\" className=\"App__add-100\" onClick={this.add100}>\n          I sent tiktoks about programmers to the chat\n        </button>\n\n        <button type=\"button\" className=\"App__increase\" onClick={this.increase}>\n          I fix the proposed changes even if the task is approved\n        </button>\n\n        <button type=\"button\" className=\"App__reset\" onClick={this.setZero}>\n          I use array index as a key prop\n        </button>\n\n        <button type=\"button\" onClick={this.greatIncrease}>\n          I am a student of Mate Academy\n        </button>\n\n        <h1 className=\"App__title\">\n          <p>Your expected salary:</p>\n          {`Count: ${count}`}\n        </h1>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}